# Generated by Django 4.2.7 on 2025-06-25 20:02

from django.db import migrations, models
import django.db.models.deletion
import documents.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('document_type', models.CharField(choices=[('application_form', 'Application Form'), ('indicative_letter', 'Indicative Letter'), ('formal_approval', 'Formal Approval'), ('valuation_report', 'Valuation Report'), ('qs_report', 'Quantity Surveyor Report'), ('id_verification', 'ID Verification'), ('bank_statement', 'Bank Statement'), ('payslip', 'Payslip'), ('tax_return', 'Tax Return'), ('contract', 'Contract'), ('other', 'Other')], default='other', max_length=50)),
                ('file', models.FileField(upload_to=documents.models.document_upload_path)),
                ('file_name', models.CharField(blank=True, default='document.pdf', max_length=255, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, default=0, help_text='File size in bytes', null=True)),
                ('file_type', models.CharField(blank=True, default='application/pdf', help_text='MIME type', max_length=100, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('application', 'Application Fee'), ('valuation', 'Valuation Fee'), ('legal', 'Legal Fee'), ('broker', 'Broker Fee'), ('settlement', 'Settlement Fee'), ('other', 'Other Fee')], max_length=20)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('invoice', models.FileField(blank=True, null=True, upload_to=documents.models.invoice_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('fee_created', 'Fee Created'), ('fee_paid', 'Fee Paid'), ('repayment_scheduled', 'Repayment Scheduled'), ('repayment_received', 'Repayment Received'), ('adjustment', 'Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ledger entries',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='Note', max_length=255, null=True)),
                ('content', models.TextField(blank=True, default='', null=True)),
                ('remind_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Repayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('invoice', models.FileField(blank=True, null=True, upload_to=documents.models.invoice_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('overdue_3_day_sent', models.BooleanField(default=False)),
                ('overdue_7_day_sent', models.BooleanField(default=False)),
                ('overdue_10_day_sent', models.BooleanField(default=False)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='applications.application')),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
    ]
