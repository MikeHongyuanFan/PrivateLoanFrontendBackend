# Generated by Django 4.2.7 on 2025-06-24 02:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0022_application_is_archived_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('settlement_date', models.DateField(help_text='Date when the loan was settled')),
                ('capitalised_interest_months', models.PositiveIntegerField(default=0, help_text='Number of months for capitalised interest')),
                ('interest_payments_required', models.BooleanField(default=False, help_text='Whether interest payments are required during the loan term')),
                ('interest_payment_frequency', models.CharField(blank=True, choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annually', 'Semi-Annually'), ('annually', 'Annually')], help_text='Frequency of interest payments (if required)', max_length=20, null=True)),
                ('interest_payment_due_dates', models.JSONField(default=list, help_text='List of dates when interest payments are due')),
                ('loan_expiry_date', models.DateField(help_text='Date when the loan expires')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this loan is currently active')),
            ],
            options={
                'verbose_name': 'Active Loan',
                'verbose_name_plural': 'Active Loans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActiveLoanRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('repayment_type', models.CharField(choices=[('interest', 'Interest Payment'), ('principal', 'Principal Payment'), ('principal_interest', 'Principal + Interest'), ('penalty', 'Penalty Payment'), ('early_settlement', 'Early Settlement')], help_text='Type of repayment', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Repayment amount', max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_date', models.DateField(help_text='Date the payment was made')),
                ('due_date', models.DateField(blank=True, help_text='Original due date for this payment', null=True)),
                ('reference_number', models.CharField(blank=True, help_text='Bank reference or transaction number', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this repayment', null=True)),
                ('is_late', models.BooleanField(default=False, help_text='Whether this payment was made after the due date')),
            ],
            options={
                'verbose_name': 'Active Loan Repayment',
                'verbose_name_plural': 'Active Loan Repayments',
                'ordering': ['-payment_date'],
            },
        ),
        # Removed the AddField operation for is_archived since it already exists
        # Removed the AddIndex operation for is_archived since it already exists
        migrations.AddField(
            model_name='activeloanrepayment',
            name='active_loan',
            field=models.ForeignKey(help_text='Active loan this repayment is for', on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='applications.activeloan'),
        ),
        migrations.AddField(
            model_name='activeloan',
            name='application',
            field=models.OneToOneField(help_text='Application that has been settled and become an active loan', on_delete=django.db.models.deletion.CASCADE, related_name='active_loan', to='applications.application'),
        ),
        migrations.AddIndex(
            model_name='activeloanrepayment',
            index=models.Index(fields=['active_loan'], name='application_active__56e062_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloanrepayment',
            index=models.Index(fields=['payment_date'], name='application_payment_7b5cc7_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloanrepayment',
            index=models.Index(fields=['due_date'], name='application_due_dat_779de4_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloanrepayment',
            index=models.Index(fields=['repayment_type'], name='application_repayme_1c0a9a_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloan',
            index=models.Index(fields=['application'], name='application_applica_d45a79_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloan',
            index=models.Index(fields=['settlement_date'], name='application_settlem_e4f7fe_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloan',
            index=models.Index(fields=['loan_expiry_date'], name='application_loan_ex_8b9315_idx'),
        ),
        migrations.AddIndex(
            model_name='activeloan',
            index=models.Index(fields=['is_active'], name='application_is_acti_688247_idx'),
        ),
    ]
