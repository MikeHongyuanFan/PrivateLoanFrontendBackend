version: '3.8'

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: always
    env_file:
      - ./.env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: .
    command: celery -A crm_backend worker -l INFO
    env_file:
      - ./.env
    volumes:
      - .:/app
      - media_volume:/app/media
    depends_on:
      - web
      - redis

  celery-beat:
    build: .
    command: celery -A crm_backend beat -l INFO
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
      - celery

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
