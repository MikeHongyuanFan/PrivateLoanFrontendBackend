services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=crm_loan_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backenddjango
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn crm_backend.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backenddjango:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=0
      - POSTGRES_DB=crm_loan_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=True
      - EMAIL_HOST_USER=fanhongyuan897@gmail.com
      - EMAIL_HOST_PASSWORD=oytebasqthbbjvdd
      - DEFAULT_FROM_EMAIL=fanhongyuan897@gmail.com

  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend

  celery:
    build: ./backenddjango
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A crm_backend worker -l info"
    volumes:
      - ./backenddjango:/app
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=0
      - POSTGRES_DB=crm_loan_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1

  celery-beat:
    build: ./backenddjango
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A crm_backend beat -l info"
    volumes:
      - ./backenddjango:/app
    depends_on:
      - backend
      - redis
    environment:
      - DEBUG=0
      - POSTGRES_DB=crm_loan_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1

volumes:
  postgres_data:
  static_volume:
  media_volume:
